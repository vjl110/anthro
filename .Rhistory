outlier <- (iqr * 5) + upperq
mr <- subset(mr, RT <= outlier & Trial != 1 & Degree != 0)
mr <- mr[c(1, 5:6)]
mr <- aggregate( . ~ Subject, data = mr, mean)
colnames(mr)[1] <- "ID"
# PERSPECTIVE TAKING DATA
psp <- merge(inf, psp, by="ID")
for(i in 1:nrow(psp)){
psp$avg[i] <- ifelse(is.na(mean(as.numeric(abs(psp[i, 9:20])))), NA, mean(as.numeric(abs(psp[i, 9:20]))))
}
# POINTING DATA
hld <- merge(pnt, inf, by="ID", all.x = T)
# First step is to remove distance component then calculate an average score for individuals.
hld$Bearing_Difference <- abs(hld$Bearing_Difference)
hld <- subset(hld, to != "otjinungua" & to != "ruacana" & to != "ongokua")
hld <- hld[,c(1,10)]
hld <- aggregate( . ~ ID, data = hld, mean)
colnames(hld)[2] <- "pnt.err"
########
for(i in 1:nrow(srvy)){
srvy$ha[i]<-1-mean(c(srvy$HA1[i], srvy$HA2[i], srvy$HA3[i], srvy$HA4[i], srvy$HA5[i]),na.rm=T)
srvy$sab[i] <- 4 - mean(c(srvy$SAB1b[i], srvy$SAB2[i], srvy$SAB3[i]), na.rm=T)
srvy$sax[i] <- 4 - mean(c(srvy$SAX1[i], srvy$SAX2[i], srvy$SAX3[i], (4 - srvy$SAX4[i])), na.rm=T) #removed sax1 because there was no variance
}
#########
for(i in 1:nrow(ltm)){
ltm$ltm[i] <- mean(as.numeric(ltm[i, 2:21]), na.rm=T) - 1
}
#########
mob$avc <- mob$alone/(mob$alone + mob$company)
#########
trk <- aggregate( . ~ ID, data = trk, mean)
dat <- merge(inf, corsi[,c(1,5)], by = "ID", all.x=T)
dat <- merge(dat, mr, by = "ID", all.x=T)
dat <- merge(dat, rep[c(1,4:6)], by = "ID", all.x=T)
dat <- merge(dat, psp[c(1, ncol(psp))], by = "ID", all.x=T)
dat <- merge(dat, hld, by = "ID", all.x=T)
dat <- merge(dat, mob[c(1:2, 9)], by = "ID", all.x=T)
dat <- merge(dat, srvy[c(1,31:33)], by = "ID", all.x=T)
dat <- merge(dat, ltm[c(1,22)], by = "ID", all.x=T)
dat <- merge(dat, trk[c(1,6)], by = "ID", all.x=T)
m1 <- lm(tot ~ Acc, data = subset(dat, male == 0))
summary(m1)
m1 <- lm(tot ~ Acc + RT, data = subset(dat, male == 0))
summary(m1)
m1 <- lm(tot ~ Acc + RT, data = subset(dat, male == 1))
summary(m1)
m1 <- lm(tot ~ Acc, data = subset(dat, male == 1))
summary(m1)
m1 <- lm(tot ~ Acc, data = subset(dat, male == 1 & Acc >= .5))
summary(m1)
m1 <- lm(tot ~ Acc, data = subset(dat, male == 1 & Acc > .5))
summary(m1)
m1 <- lm(tot ~ Acc + age, data = subset(dat, male == 1 & Acc >= .5))
summary(m1)
m1 <- lm(tot ~ Acc + male, data = subset(dat, male == 1 & Acc >= .5))
summary(m1)
m1 <- lm(tot ~ I(scale(Acc) - scale(RT)), data = subset(dat, male == 1 & Acc >= .5))
summary(m1)
m1 <- lm(tot ~ Acc*male, data = subset(Acc >= .5))
m1 <- lm(tot ~ Acc + male, data = subset(Acc >= .5))
m1 <- lm(tot ~ Acc + male, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ Acc*male, data = subset(dat, Acc >= .5))
summary(m1)
library(effsize)
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$pregnant == 0], na.rm=T)
head(dat)
head(rep)
rm(list=ls())
setwd("~/GitHub/anthro")
######
######
######
inf <- read.csv("womenmob/data/tweinfo.csv", strip.white = T)
rep <- read.csv("womenmob/data/repro.csv", strip.white = T)
corsi <- read.csv("womenmob/data/twecorsi.csv", strip.white = T)
psp <- read.csv("womenmob/data/persp_err.csv", strip.white = T)
pnt <- read.csv("womenmob/data/pnt_byrow.csv", strip.white = T)
mr <- read.csv("womenmob/data/MR_bytrial.csv", strip.white = T)
mob <- read.csv("womenmob/data/yrmob.csv", strip.white = T)
srvy <- read.csv("womenmob/data/survey.csv", strip.white = T)
trk <- read.csv("womenmob/data/trackdat.csv", strip.white = T)
ltm <- read.csv("womenmob/data/ltmob.csv", strip.white = T)
# MENTAL ROTATION DATA
lowerq = quantile(mr$RT)[2]
upperq = quantile(mr$RT)[3]
iqr = upperq - lowerq #Or use IQR(data)
outlier <- (iqr * 5) + upperq
mr <- subset(mr, RT <= outlier & Trial != 1 & Degree != 0)
mr <- mr[c(1, 5:6)]
mr <- aggregate( . ~ Subject, data = mr, mean)
colnames(mr)[1] <- "ID"
# PERSPECTIVE TAKING DATA
psp <- merge(inf, psp, by="ID")
for(i in 1:nrow(psp)){
psp$avg[i] <- ifelse(is.na(mean(as.numeric(abs(psp[i, 9:20])))), NA, mean(as.numeric(abs(psp[i, 9:20]))))
}
# POINTING DATA
hld <- merge(pnt, inf, by="ID", all.x = T)
# First step is to remove distance component then calculate an average score for individuals.
hld$Bearing_Difference <- abs(hld$Bearing_Difference)
hld <- subset(hld, to != "otjinungua" & to != "ruacana" & to != "ongokua")
hld <- hld[,c(1,10)]
hld <- aggregate( . ~ ID, data = hld, mean)
colnames(hld)[2] <- "pnt.err"
########
for(i in 1:nrow(srvy)){
srvy$ha[i]<-1-mean(c(srvy$HA1[i], srvy$HA2[i], srvy$HA3[i], srvy$HA4[i], srvy$HA5[i]),na.rm=T)
srvy$sab[i] <- 4 - mean(c(srvy$SAB1b[i], srvy$SAB2[i], srvy$SAB3[i]), na.rm=T)
srvy$sax[i] <- 4 - mean(c(srvy$SAX1[i], srvy$SAX2[i], srvy$SAX3[i], (4 - srvy$SAX4[i])), na.rm=T) #removed sax1 because there was no variance
}
#########
for(i in 1:nrow(ltm)){
ltm$ltm[i] <- mean(as.numeric(ltm[i, 2:21]), na.rm=T) - 1
}
#########
mob$avc <- mob$alone/(mob$alone + mob$company)
#########
trk <- aggregate( . ~ ID, data = trk, mean)
dat <- merge(inf, corsi[,c(1,5)], by = "ID", all.x=T)
dat <- merge(dat, mr, by = "ID", all.x=T)
dat <- merge(dat, rep[c(1,4:6, 8)], by = "ID", all.x=T)
dat <- merge(dat, psp[c(1, ncol(psp))], by = "ID", all.x=T)
dat <- merge(dat, hld, by = "ID", all.x=T)
dat <- merge(dat, mob[c(1:2, 9)], by = "ID", all.x=T)
dat <- merge(dat, srvy[c(1,31:33)], by = "ID", all.x=T)
dat <- merge(dat, ltm[c(1,22)], by = "ID", all.x=T)
dat <- merge(dat, trk[c(1,6)], by = "ID", all.x=T)
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$age < 50 & dat$bfeed == 1], dat$tot[dat$male == 0 & dat$age < 50 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$age < 45 & dat$bfeed == 1], dat$tot[dat$male == 0 & dat$age < 45 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$age < 50 & dat$age >= 18 & dat$bfeed == 1], dat$tot[dat$male == 0 & dat$age < 50 & dat$age >= 18  & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
m1 <- lm(tot ~ avg*male, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ span*male, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ span*male + age, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ span*male, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ pnt.err*male, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ span*male, data = subset(dat, span >= 2))
summary(m1)
m1 <- lm(tot ~ pnt.err*male, data = dat)
summary(m1)
64+64
m1 <- lm(tot ~ Acc*male + span, data = dat)
m1 <- lm(tot ~ Acc*male, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ Acc*male + span, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ Acc*male + span, data = subset(dat, Acc >= .5 & span >= 2))
summary(m1)
m1 <- lm(tot ~ Acc*male, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ RT*male, data = subset(dat, Acc >= .5))
summary(m1)
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 0 & (dat$bfeed == 1 | dat$preg ==1)], dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
cohen.d(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$Acc[dat$male == 0 & dat$Acc >= .5], na.rm=T)
cohen.d(dat$RT[dat$male == 1 & dat$Acc >= .5], dat$RT[dat$male == 0 & dat$Acc >= .5], na.rm=T)
cohen.d(dat$Acc[dat$male == 0 & dat$pst.repro == 1], dat$Acc[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
cohen.d(dat$Acc[dat$male == 0 & dat$pst.repro == 1 & dat$Acc >= .5], dat$Acc[dat$male == 0 & dat$pst.repro == 0 & dat$Acc >= .5], na.rm=T)
cohen.d(dat$RT[dat$male == 0 & dat$pst.repro == 1 & dat$Acc >= .5], dat$RT[dat$male == 0 & dat$pst.repro == 0 & dat$Acc >= .5], na.rm=T)
cohen.d(dat$Acc[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1 & dat$Acc >= .5], dat$Acc[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$Acc >= .5], na.rm=T)
cohen.d(dat$RT[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1 & dat$Acc >= .5], dat$RT[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$Acc >= .5], na.rm=T)
cohen.d(dat$RT[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1 & dat$Acc >= .5], dat$RT[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0 & dat$Acc >= .5], na.rm=T)
cohen.d(dat$Acc[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1 & dat$Acc >= .5], dat$Acc[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0 & dat$Acc >= .5], na.rm=T)
subset(dat, preg == 1)
nrow(susbet(dat, male == 0 & pst.repro == 0 & bfeed == 0 & preg == 0))
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 0 & preg == 0))
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 0 & preg == 0 & Acc >=/ 5))
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 0 & preg == 0 & Acc >= .5))
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 1 & preg == 0 & Acc >= .5))
17/60
12/64
8/13
9/42
cohen.d(dat$Acc[dat$male == 0 & dat$pst.repro == 0 & dat$preg == 0 & dat$Acc >= .5], dat$Acc[dat$male == 0 & dat$pst.repro == 0 & dat$preg == 1 & dat$Acc >= .5], na.rm=T)
cohen.d(dat$Acc[dat$male == 0 & dat$pst.repro == 0 & dat$preg == 0 & dat$bfeed == 0 & dat$Acc >= .5], dat$Acc[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0  & dat$preg == 1 & dat$Acc >= .5], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$preg == 1 & dat$bfeed == 0], dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0  & dat$preg == 0], na.rm=T)
cohen.d(dat$sax[dat$male == 1], dat$sax[dat$male == 0], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0  & dat$preg == 0], na.rm=T)
cohen.d(dat$sax[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$sax[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0  & dat$preg == 0], na.rm=T)
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 1 !is.na(sax)))
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 1 & !is.na(sax)))
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 0 & preg == 0 & !is.na(sax)))
mean(dat$sax[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$sax[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0  & dat$preg == 0], na.rm=T)
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 0 & preg == 0 & !is.na(tot)))
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 0 & preg == 0 & !is.na(avc)))
nrow(subset(dat, male == 0 & pst.repro == 0 & bfeed == 0 & preg == 0 & !is.na(net)))
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$sax[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0  & dat$preg == 0], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
cohen.d(dat$avc[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$avc[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
cohen.d(dat$net[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$net[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
cohen.d(dat$tot[dat$male == 1], dat$tot[dat$male == 0], na.rm=T)
cohen.d(dat$avc[dat$male == 1], dat$avc[dat$male == 0], na.rm=T)
cohen.d(dat$net[dat$male == 1], dat$net[dat$male == 0], na.rm=T)
cohen.d(dat$net[dat$male == 0 & dat$pst.repro == 1], dat$net[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$pst.repro == 1], dat$tot[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
cohen.d(dat$avc[dat$male == 0 & dat$pst.repro == 1], dat$avc[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
m1 <- lm(tot ~ Acc, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(tot ~ Acc*male, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(scale(tot) ~ scale(Acc) data = subset(dat, Acc >= .5))
m1 <- lm(scale(tot) ~ scale(Acc), data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(scale(tot) ~ scale(Acc)*scale(male), data = subset(dat, Acc >= .5))
summary(m1)
plot(NULL, xlim=c(18, 75), ylim=c(0,1), ylab = "Mental Rotation Accuracy", xlab = "Age", font = 2)
points(dat$age[dat$male == 1], dat$Acc[dat$male == 1], pch = 16, col = "blue")
lws <- loess(Acc ~ age, data = subset(dat, male == 1), span = .9)
lines(18:80, predict(lws, 18:80), col = "blue", lwd = 2)
points(dat$age[dat$male == 0], dat$Acc[dat$male == 0], pch = 16, col = "salmon")
lws <- loess(Acc ~ age, data = subset(dat, male == 0), span = .9)
lines(18:80, predict(lws, 18:80), col = "salmon", lwd = 2)
plot(NULL, xlim=c(18, 75), ylim=c(0,1), ylab = "", xlab = "", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "blue")
lws <- loess(tot ~ Acc, data = subset(dat, male == 1 & Acc >= .5), span = .9)
lines(18:80, predict(lws, 18:80), col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lws <- loess(tot ~ Acc, data = subset(dat, male == 0 & Acc >= .5), span = .9)
lines(18:80, predict(lws, 18:80), col = "salmon", lwd = 2)
plot(NULL, xlim=c(0, 1), ylim=c(0,20), ylab = "", xlab = "", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "blue")
lws <- loess(tot ~ Acc, data = subset(dat, male == 1 & Acc >= .5), span = .9)
lines(18:80, predict(lws, 18:80), col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lws <- loess(tot ~ Acc, data = subset(dat, male == 0 & Acc >= .5), span = .9)
lines(18:80, predict(lws, 18:80), col = "salmon", lwd = 2)
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "", xlab = "", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "blue")
lws <- loess(tot ~ Acc, data = subset(dat, male == 1 & Acc >= .5), span = .9)
lines(18:80, predict(lws, 18:80), col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lws <- loess(tot ~ Acc, data = subset(dat, male == 0 & Acc >= .5), span = .9)
lines(18:80, predict(lws, 18:80), col = "salmon", lwd = 2)
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "", xlab = "", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "blue")
lws <- loess(tot ~ Acc, data = subset(dat, male == 1 & Acc >= .5), span = .9)
lines(18:80, predict(lws, .5:1), col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lws <- loess(tot ~ Acc, data = subset(dat, male == 0 & Acc >= .5), span = .9)
lines(18:80, predict(lws, .5:1), col = "salmon", lwd = 2)
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "", xlab = "", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "blue")
lws <- loess(tot ~ Acc, data = subset(dat, male == 1 & Acc >= .5), span = .9)
lines(18:80, predict(lws, .5:1), col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lws <- loess(tot ~ Acc, data = subset(dat, male == 0 & Acc >= .5), span = .9)
lines(18:80, predict(lws, .5:1), col = "salmon", lwd = 2)
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "", xlab = "", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "blue")
lws <- loess(tot ~ Acc, data = subset(dat, male == 1 & Acc >= .5), span = .9)
lines(18:80, predict(lws, .5:1), col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lws <- loess(tot ~ Acc, data = subset(dat, male == 0 & Acc >= .5), span = .9)
lines(18:80, predict(lws, .5:1), col = "salmon", lwd = 2)
predict(lws, c(5:10)/10)
5:10)/10
c(5:10)/10
predict(lws, .5
)
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "", xlab = "", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "blue")
lws <- loess(tot ~ Acc, data = subset(dat, male == 1 & Acc >= .5), span = .9)
lines(c(6:10)/10, predict(lws, c(6:10)/10), col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lws <- loess(tot ~ Acc, data = subset(dat, male == 0 & Acc >= .5), span = .9)
lines(c(6:10)/10, predict(lws, c(6:10)/10), col = "salmon", lwd = 2)
m1 <- lm(tot ~ Acc*male, subset(dat, Acc >= .5))
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "", xlab = "", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "light blue")
lines(c(5:10)/10, coef(m1)[1] +  coef(m1)[2]*c(6:10)/10 + coef(m1)[3]*1 + coef(m1)[4]*c(6:10)/10*1, col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lines(c(5:10)/10, coef(m1)[1] + coef(m1)[2]*c(6:10)/10, col = "red", lwd = 2)
m1 <- lm(tot ~ Acc*male, subset(dat, Acc >= .5))
prd <- data.frame(Acc = c(50:100)/100)
prd$m <- coef(m1)[1] + prd$Acc + coef(m1)[3] + coef(m1)[4]*prd$Acc
prd$f <- coef(m1)[1] + prd$Acc
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "", xlab = "", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "light blue")
lines(prd$Acc, prd$m, col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lines(prd$Acc, prd$f, col = "red", lwd = 2)
png("menvwom_acctot.png", height = 500, width = 500)
m1 <- lm(tot ~ Acc*male, subset(dat, Acc >= .5))
prd <- data.frame(Acc = c(50:100)/100)
prd$m <- coef(m1)[1] + prd$Acc + coef(m1)[3] + coef(m1)[4]*prd$Acc
prd$f <- coef(m1)[1] + prd$Acc
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "Unique Visits", xlab = "Mental Rotation (% Correct)", font = 2)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "light blue")
lines(prd$Acc, prd$m, col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lines(prd$Acc, prd$f, col = "red", lwd = 2)
dev.off()
summary(m1)
png("menvwom_acctot.png", height = 500, width = 500)
m1 <- lm(tot ~ Acc*male, subset(dat, Acc >= .5))
prd <- data.frame(Acc = c(50:100)/100)
prd$m <- coef(m1)[1] + prd$Acc + coef(m1)[3] + coef(m1)[4]*prd$Acc
prd$f <- coef(m1)[1] + prd$Acc
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "Unique Visits", xlab = "Mental Rotation (% Correct)", font = 2, font.lab = 2, cex = 1.5, cex.lab = 1.5)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "light blue")
lines(prd$Acc, prd$m, col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lines(prd$Acc, prd$f, col = "red", lwd = 2)
dev.off()
rm(list=ls())
setwd("~/GitHub/anthro")
######
######
######
inf <- read.csv("womenmob/data/tweinfo.csv", strip.white = T)
rep <- read.csv("womenmob/data/repro.csv", strip.white = T)
corsi <- read.csv("womenmob/data/twecorsi.csv", strip.white = T)
psp <- read.csv("womenmob/data/persp_err.csv", strip.white = T)
pnt <- read.csv("womenmob/data/pnt_byrow.csv", strip.white = T)
mr <- read.csv("womenmob/data/MR_bytrial.csv", strip.white = T)
mob <- read.csv("womenmob/data/yrmob.csv", strip.white = T)
srvy <- read.csv("womenmob/data/survey.csv", strip.white = T)
trk <- read.csv("womenmob/data/trackdat.csv", strip.white = T)
ltm <- read.csv("womenmob/data/ltmob.csv", strip.white = T)
# MENTAL ROTATION DATA
lowerq = quantile(mr$RT)[2]
upperq = quantile(mr$RT)[3]
iqr = upperq - lowerq #Or use IQR(data)
outlier <- (iqr * 5) + upperq
mr <- subset(mr, RT <= outlier & Trial != 1 & Degree != 0)
mr <- mr[c(1, 5:6)]
mr <- aggregate( . ~ Subject, data = mr, mean)
colnames(mr)[1] <- "ID"
# PERSPECTIVE TAKING DATA
psp <- merge(inf, psp, by="ID")
for(i in 1:nrow(psp)){
psp$avg[i] <- ifelse(is.na(mean(as.numeric(abs(psp[i, 9:20])))), NA, mean(as.numeric(abs(psp[i, 9:20]))))
}
# POINTING DATA
hld <- merge(pnt, inf, by="ID", all.x = T)
# First step is to remove distance component then calculate an average score for individuals.
hld$Bearing_Difference <- abs(hld$Bearing_Difference)
hld <- subset(hld, to != "otjinungua" & to != "ruacana" & to != "ongokua")
hld <- hld[,c(1,10)]
hld <- aggregate( . ~ ID, data = hld, mean)
colnames(hld)[2] <- "pnt.err"
########
for(i in 1:nrow(srvy)){
srvy$ha[i]<-1-mean(c(srvy$HA1[i], srvy$HA2[i], srvy$HA3[i], srvy$HA4[i], srvy$HA5[i]),na.rm=T)
srvy$sab[i] <- 4 - mean(c(srvy$SAB1b[i], srvy$SAB2[i], srvy$SAB3[i]), na.rm=T)
srvy$sax[i] <- 4 - mean(c(srvy$SAX1[i], srvy$SAX2[i], srvy$SAX3[i], (4 - srvy$SAX4[i])), na.rm=T) #removed sax1 because there was no variance
}
#########
for(i in 1:nrow(ltm)){
ltm$ltm[i] <- mean(as.numeric(ltm[i, 2:21]), na.rm=T) - 1
}
#########
mob$avc <- mob$alone/(mob$alone + mob$company)
#########
trk <- aggregate( . ~ ID, data = trk, mean)
dat <- merge(inf, corsi[,c(1,5)], by = "ID", all.x=T)
dat <- merge(dat, mr, by = "ID", all.x=T)
dat <- merge(dat, rep[c(1,4:6, 8)], by = "ID", all.x=T)
dat <- merge(dat, psp[c(1, ncol(psp))], by = "ID", all.x=T)
dat <- merge(dat, hld, by = "ID", all.x=T)
dat <- merge(dat, mob[c(1:2, 9)], by = "ID", all.x=T)
dat <- merge(dat, srvy[c(1,31:33)], by = "ID", all.x=T)
dat <- merge(dat, ltm[c(1,22)], by = "ID", all.x=T)
dat <- merge(dat, trk[c(1,6)], by = "ID", all.x=T)
mean(dat$Acc[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 0 & bfeed == 1])
mean(dat$Acc[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 0 & bfeed == 1], na.rm=T)
mean(dat$Acc[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$Acc[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
mean(dat$RT[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
mean(dat$RT[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$pnt.err[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$pnt.err[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
mean(dat$pnt.err[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 0], na.rm=T)
mean(dat$pnt.err[dat$Acc >= .5 & dat$male == 0 & dat$pst.repro == 1], na.rm=T)
mean(dat$pnt.err[dat$male == 1], na.rm=T)
mean(dat$pnt.err[dat$male == 0], na.rm=T)
mean(dat$pnt.err[dat$male == 0 & dat$pst.repro == 1], na.rm=T)
mean(dat$pnt.err[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
mean(dat$pnt.err[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$pnt.err[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
library(effsize)
library(eff.size)
cohen.d(dat$pnt.err[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], dat$pnt.err[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
cohen.d(dat$pnt.err[dat$male == 0 & dat$pst.repro == 1], dat$pnt.err[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
cohen.d(dat$pnt.err[dat$male == 1], dat$pnt.err[dat$male == 0], na.rm=T)
length(dat$pnt.err[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
length(dat$pnt.err[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0)
subset(dat, !is.na(pnt.err) & male == 1)
nrow(subset(dat, !is.na(pnt.err) & male == 1))\
nrow(subset(dat, !is.na(pnt.err) & male == 1))
nrow(subset(dat, !is.na(pnt.err) & male == 0))
nrow(subset(dat, !is.na(pnt.err) & male == 0 & pst.repro == 1))
nrow(subset(dat, !is.na(pnt.err) & male == 0 & pst.repro == 0))
nrow(subset(dat, !is.na(pnt.err) & male == 0 & pst.repro == 0 & bfeed == 1))
nrow(subset(dat, !is.na(pnt.err) & male == 0 & pst.repro == 0 & bfeed == 0 & preg == 0))
m1 <- lm(Acc ~ ifelse(age >= 50)*male, data = subset(dat, Acc >= .5))
m1 <- lm(Acc ~ I(ifelse(age >= 50, 1, 0)*male, data = subset(dat, Acc >= .5))
m1 <- lm(Acc ~ I(ifelse(age >= 50, 1, 0))*male, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(Acc ~ I(ifelse(age >= 50, 1, 0)) + male + age, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(Acc ~ I(ifelse(age >= 50, 1, 0))*male + age, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(Acc ~ age, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(Acc ~ age, data = subset(dat, Acc >= .5 & male == 1))
summary(m1)
m1 <- lm(Acc ~ scale(age), data = subset(dat, Acc >= .5 & male == 1))
summary(m1)
cohen.d(dat$Acc[dat$male == 0 & dat$Acc >= .5 & dat$age >= 50], dat$Acc[dat$male == 0 & dat$Acc >= .5 & dat$age < 50], na.rm=T)
cohen.d(dat$Acc[dat$male == 1 & dat$Acc >= .5 & dat$age >= 50], dat$Acc[dat$male == 1 & dat$Acc >= .5 & dat$age < 50], na.rm=T)
cohen.d(dat$RT[dat$male == 1 & dat$Acc >= .5 & dat$age >= 50], dat$RT[dat$male == 1 & dat$Acc >= .5 & dat$age < 50], na.rm=T)
dat$Acc[dat$male == 1 & dat$Acc >= .5 & dat$age >= 50]
mean(dat$Acc[dat$male == 1 & dat$Acc >= .5 & dat$age >= 50])
mean(dat$Acc[dat$male == 1 & dat$Acc >= .5 & dat$age >= 50], na.rm=T)
mean(dat$Acc[dat$male == 1 & dat$Acc >= .5 & dat$age < 50], na.rm=T)
mean(dat$RT[dat$male == 1 & dat$Acc >= .5 & dat$age >= 50], na.rm=T)
mean(dat$RT[dat$male == 1 & dat$Acc >= .5 & dat$age < 50], na.rm=T)
mean(dat$pnt.err[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
mean(dat$pnt.err[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$sax[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
mean(dat$sax[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$sax[dat$male == 0 & dat$pst.repro == 1], na.rm=T)
mean(dat$sax[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
mean(dat$sax[dat$male == 1], na.rm=T)
mean(dat$sax[dat$male == 0], na.rm=T)
surv
head(srv)
head(srvy)
hist(SAX1)
hist(srvy$SAX1)
hist(srvy$SAX2)
hist(srvy$SAX3)
hist(srvy$SAX4)
subset(srvy[srvy$SAX1 == 3,])
subset(srvy, SAX1 == 3)
subset(srvy, SAX1 == 2)
subset(srvy, SAX1 == 1)
srvy$SAX1
tst <- merge(inf, srvy, by = "ID", all.x=T)
tst <- subset(tst, male == 0)
hist(tst$SAX1)
hist(tst$SAX2)
hist(tst$SAX3)
hist(tst$SAX4)
subset(tst, SAX1 == 3)
hist(sax)
hist(dat$sax)
mean(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
mean(dat$avc[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
mean(dat$net[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 0 & dat$preg == 0], na.rm=T)
mean(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$avc[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$tot[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$net[dat$male == 0 & dat$pst.repro == 0 & dat$bfeed == 1], na.rm=T)
mean(dat$tot[dat$male == 0 & dat$pst.repro == 1], na.rm=T)
mean(dat$avc[dat$male == 0 & dat$pst.repro == 1], na.rm=T)
mean(dat$net[dat$male == 0 & dat$pst.repro == 1], na.rm=T)
mean(dat$tot[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
mean(dat$avc[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
mean(dat$net[dat$male == 0 & dat$pst.repro == 0], na.rm=T)
mean(dat$tot[dat$male == 1], na.rm=T)
mean(dat$avc[dat$male == 1], na.rm=T)
mean(dat$net[dat$male == 1], na.rm=T)
mean(dat$tot[dat$male == 0], na.rm=T)
mean(dat$avc[dat$male == 0], na.rm=T)
mean(dat$net[dat$male == 0], na.rm=T)
m1 <- lm(Acc ~ age, data = dat)
summary(m1)
m1 <- lm(net ~ age, data = dat)
summary(m1)
m1 <- lm(net ~ age*male, data = dat)
summary(m1)
cohen.d(dat$net[dat$male == 1 & dat$age >= 50], dat$net[dat$male == 1 & dat$age < 50], na.rm=T)
cohen.d(dat$net[dat$male == 0 & dat$age >= 50], dat$net[dat$male == 0 & dat$age < 50], na.rm=T)
cohen.d(dat$tot[dat$male == 1 & dat$age >= 50], dat$tot[dat$male == 1 & dat$age < 50], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$age >= 50], dat$tot[dat$male == 0 & dat$age < 50], na.rm=T)
cohen.d(dat$tot[dat$male == 0 & dat$age >= 50], dat$tot[dat$male == 0 & dat$age < 50], na.rm=T)
m1 <- lm(tot ~ Acc, data = subset(dat, Acc >= .5))
summary(m1)
m1 <- lm(scale(tot) ~ scale(Acc), data = subset(dat, Acc >= .5))
summary(m1)
m2 <- lm(scale(tot) ~ scale(Acc)*scale(male), data = subset(dat, Acc >= .5))
AIC(m1)
AIC(m2)
anova(m1, m2, test="Chisq")
null <- lm(scale(tot) ~ 1, data = subset(dat, Acc >= .5))
anova(null, m1, test="Chisq")
png("menvwom_acctot.png", height = 500, width = 500)
m1 <- lm(tot ~ Acc*male, subset(dat, Acc >= .5))
prd <- data.frame(Acc = c(50:100)/100)
prd$m <- coef(m1)[1] + prd$Acc*coef(m1)[2] + coef(m1)[3] + coef(m1)[4]*prd$Acc
prd$f <- coef(m1)[1] + prd$Acc*coef(m1)[2]
plot(NULL, xlim=c(0.5, 1), ylim=c(0,20), ylab = "Unique Visits", xlab = "Mental Rotation (% Correct)", font = 2, font.lab = 2, cex = 1.5, cex.lab = 1.5)
points(dat$Acc[dat$male == 1 & dat$Acc >= .5], dat$tot[dat$male == 1 & dat$Acc >= .5], pch = 16, col = "light blue")
lines(prd$Acc, prd$m, col = "blue", lwd = 2)
points(dat$Acc[dat$male == 0 & dat$Acc >= .5], dat$tot[dat$male == 0 & dat$Acc >= .5], pch = 16, col = "salmon")
lines(prd$Acc, prd$f, col = "red", lwd = 2)
dev.off()
nrow(subset(dat, !is.na(Acc) & Acc >= .5))
98.3
98.3/100
1.7/98.3
